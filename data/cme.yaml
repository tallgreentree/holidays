# Chicago Mercantile Exchange holidays definition for the Ruby Holiday gem.
#
# Updated: 2015-02-06
# 
# Sources: http://www.cmegroup.com/tools-information/holiday-calendar/
#  - http://www.futuresemail.com/cot/holiday.htm
---
months:
  0: 
  - name: Good Friday
    function: easter(year)-2
    regions: [cme]
  1:
  - name: New Year's Day
    regions: [cme]
    function: cme_new_year(year)
  - name: Birthday of Martin Luther King, Jr
    week: 3
    wday: 1
    regions: [cme]
  2:
  - name: President's Day
    week: 3
    wday: 1
    regions: [cme]
  5: 
  - name: Memorial Day
    week: -1
    wday: 1
    regions: [cme]
  7: 
  - name: Independence Day
    regions: [cme]
    mday: 4
    observed: to_monday_if_sunday_to_friday_if_saturday
  9: 
  - name: Labor Day
    week: 1
    regions: [cme]
    wday: 1
  10: 
  - name: Columbus Day
    week: 2
    regions: [cme]
    wday: 1
  11: 
  - name: Veterans Day
    regions: [cme]
    mday: 11
  - name: Thanksgiving Day
    week: 4
    wday: 4
    regions: [cme]
  12: 
  - name: Christmas Day
    regions: [cme]
    mday: 25
    observed: to_monday_if_sunday_to_friday_if_saturday
methods:
  cme_new_year: |
    # January 1st on M-F, January 2nd on January 1st falls on Sunday, NA if January 1st falls on Saturday
    def self.cme_new_year(year)
      ny = Date.new(year, 1, 1)
      ny += 1  if ny.wday == 0 
      ny = nil if ny.wday == 6
      ny
    end

tests: |
  {Date.civil(2009,1,1) => "New Year's Day",
   Date.civil(2009,1,19) => "Birthday of Martin Luther King, Jr",
   Date.civil(2009,2,16) => "President's Day",
   Date.civil(2009,4,10) => "Good Friday",
   Date.civil(2009,5,25) => "Memorial Day",
   Date.civil(2009,7,3) => "Independence Day",
   Date.civil(2009,9,7) => "Labor Day",
   Date.civil(2009,10,12) => "Columbus Day",
   Date.civil(2009,11,11) => "Veterans Day",
   Date.civil(2009,11,26) => "Thanksgiving Day",
   Date.civil(2009,12,25) => "Christmas Day",

   Date.civil(2010,1,1) => "New Year's Day",
   Date.civil(2010,1,18) => "Birthday of Martin Luther King, Jr",
   Date.civil(2010,2,15) => "President's Day",
   Date.civil(2010,4,2) => "Good Friday",
   Date.civil(2010,5,31) => "Memorial Day",
   Date.civil(2010,7,5) => "Independence Day",
   Date.civil(2010,9,6) => "Labor Day",
   Date.civil(2010,10,11) => "Columbus Day",
   Date.civil(2010,11,11) => "Veterans Day",
   Date.civil(2010,11,25) => "Thanksgiving Day",
   Date.civil(2010,12,24) => "Christmas Day", 

   Date.civil(2011,1,17) => "Birthday of Martin Luther King, Jr",
   Date.civil(2011,2,21) => "President's Day",
   Date.civil(2011,4,22) => "Good Friday",
   Date.civil(2011,5,30) => "Memorial Day",
   Date.civil(2011,7,4) => "Independence Day",
   Date.civil(2011,9,5) => "Labor Day",
   Date.civil(2011,10,10) => "Columbus Day",
   Date.civil(2011,11,11) => "Veterans Day",
   Date.civil(2011,11,24) => "Thanksgiving Day",
   Date.civil(2011,12,26) => "Christmas Day",

   Date.civil(2012,1,2) => "New Year's Day",
   Date.civil(2012,1,16) => "Birthday of Martin Luther King, Jr",
   Date.civil(2012,2,20) => "President's Day",
   Date.civil(2012,4,6) => "Good Friday",
   Date.civil(2012,5,28) => "Memorial Day",
   Date.civil(2012,7,4) => "Independence Day",
   Date.civil(2012,9,3) => "Labor Day",
   Date.civil(2012,10,8) => "Columbus Day",
   Date.civil(2012,11,11) => "Veterans Day",
   Date.civil(2012,11,22) => "Thanksgiving Day",
   Date.civil(2012,12,25) => "Christmas Day",

   Date.civil(2013,1,1) => "New Year's Day",
   Date.civil(2013,1,21) => "Birthday of Martin Luther King, Jr",
   Date.civil(2013,2,18) => "President's Day",
   Date.civil(2013,3,29) => "Good Friday",
   Date.civil(2013,5,27) => "Memorial Day",
   Date.civil(2013,7,4) => "Independence Day",
   Date.civil(2013,9,2) => "Labor Day",
   Date.civil(2013,10,14) => "Columbus Day",
   Date.civil(2013,11,11) => "Veterans Day",
   Date.civil(2013,11,28) => "Thanksgiving Day",
   Date.civil(2013,12,25) => "Christmas Day",
   
   Date.civil(2014,1,1) => "New Year's Day",
   Date.civil(2014,1,20) => "Birthday of Martin Luther King, Jr",
   Date.civil(2014,2,17) => "President's Day",
   Date.civil(2014,4,18) => "Good Friday",
   Date.civil(2014,5,26) => "Memorial Day",
   Date.civil(2014,7,4) => "Independence Day",
   Date.civil(2014,9,1) => "Labor Day",
   Date.civil(2014,10,13) => "Columbus Day",
   Date.civil(2014,11,11) => "Veterans Day",
   Date.civil(2014,11,27) => "Thanksgiving Day",
   Date.civil(2014,12,25) => "Christmas Day",
   
   Date.civil(2015,1,1) => "New Year's Day",
   Date.civil(2015,1,19) => "Birthday of Martin Luther King, Jr",
   Date.civil(2015,2,16) => "President's Day",
   Date.civil(2015,4,3) => "Good Friday",
   Date.civil(2015,5,25) => "Memorial Day",
   Date.civil(2015,7,3) => "Independence Day",
   Date.civil(2015,9,7) => "Labor Day",
   Date.civil(2015,10,12) => "Columbus Day",
   Date.civil(2015,11,11) => "Veterans Day",
   Date.civil(2015,11,26) => "Thanksgiving Day",
   Date.civil(2015,12,25) => "Christmas Day"

   }.each do |date, name|
     assert_equal name, (Holidays.on(date, :cme, :observed)[0] || {})[:name]
   end

   # Known holidays that aren't registered as CME dates
   [Date.civil(2011, 1, 1)].each do |date|
     assert_equal [], Holidays.on(date, :cme, :observed)
   end
